{"version":3,"sources":["components/Toggle.js","components/HomepageImage.js","components/ItemBox.js","components/ChangingCaption.js","components/Intro.js","App.js","serviceWorker.js","index.js"],"names":["Toggle","props","state","isToggleOn","handleClick","bind","this","setState","prevState","onClick","React","Component","HomepageImage","src","style","alt","ItemBox","description","projects","id","title","content","class","ChangingCaption","captions","date","Date","timerID","setInterval","tick","clearInterval","getUTCSeconds","Intro","className","hobbies","App","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uPA0BeA,E,kDAvBX,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,YAAY,GAG1B,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALF,E,0DASjBC,KAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BL,YAAaK,EAAUL,iB,+BAKzB,OACE,4BAAQM,QAASH,KAAKF,aACnBE,KAAKJ,MAAMC,WAAa,KAAO,W,GAlBrBO,IAAMC,WCOZC,MAPf,WAEE,OACE,yBAAKC,IAFK,mEAEKC,MAAO,CAAC,MAAS,QAASC,IAAI,qBCkBhCC,E,kDAnBb,WAAYf,GAAO,IAAD,8BACd,cAAMA,IACDgB,YACD,6BACI,4BAAKhB,EAAMiB,SAASjB,EAAMkB,IAAIC,OAC9B,2BAAInB,EAAMiB,SAASjB,EAAMkB,IAAIE,UALvB,E,qDAUhB,OACE,yBAAKC,MAAM,SACT,kBAAC,EAAD,MACChB,KAAKW,iB,GAdMP,IAAMC,WCmCXY,E,kDAhCb,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IAHRuB,SAAW,CAAC,QAAS,YAAa,UAAW,WAI3C,EAAKtB,MAAQ,CAACuB,KAAM,IAAIC,MAFP,E,gEAKE,IAAD,OAChBpB,KAAKqB,QAAUC,aACb,kBAAM,EAAKC,SACX,O,6CAKFC,cAAcxB,KAAKqB,W,6BAInBrB,KAAKC,SAAS,CACZkB,KAAM,IAAIC,S,+BAKd,OACE,6BACE,uBAAGZ,MAAO,CAAC,MAAS,YAApB,SAAwCR,KAAKkB,SAASlB,KAAKJ,MAAMuB,KAAKM,gBAAkB,S,GA7BpErB,IAAMC,WCoBnBqB,E,uKAjBX,OACE,yBAAKV,MAAM,OACT,yBAAKA,MAAM,UAAS,yBAAKT,IAAI,4FAA4FoB,UAAU,WAAWlB,IAAI,UAClJ,yBAAKO,MAAM,UACT,sCACA,kBAAC,EAAD,MACA,6EAAkD,6BAAlD,qBACoB,6BADpB,sCAEqC,6BAFrC,+C,GARQZ,IAAMC,WCKpBO,EAAW,CACf,EAAK,CAACE,MAAO,8BAA+BC,QAAS,2BACrD,EAAK,CAACD,MAAO,oCAAqCC,QAAS,aAC3D,EAAK,CAACD,MAAO,2CAA4CC,QAAS,qBAClE,EAAK,CAACD,MAAO,WAAYC,QAAS,WAClC,EAAK,CAACD,MAAO,qBAAsBC,QAAS,WAC5C,EAAK,CAACD,MAAO,cAAeC,QAAS,mBAGjCa,EAAU,CACd,EAAK,CAACd,MAAO,QAASC,QAAS,SAC/B,EAAK,CAACD,MAAO,QAASC,QAAS,SAC/B,EAAK,CAACD,MAAO,gBAAiBC,QAAS,cA0F1Bc,MAnFf,WACE,OACE,yBAAKF,UAAU,OACb,4BAAQA,UAAU,cAChB,gDAAqB,kBAAC,EAAD,QAEvB,0BAAMA,UAAU,YAEd,kBAAC,EAAD,MAEA,kDACA,yBAAKX,MAAM,OACT,yBAAKA,MAAM,UAAS,kBAAC,EAAD,CAASH,GAAG,IAAID,SAAUA,KAC9C,yBAAKI,MAAM,UAAS,kBAAC,EAAD,CAASH,GAAG,IAAID,SAAUA,KAC9C,yBAAKI,MAAM,UAAS,kBAAC,EAAD,CAASH,GAAG,IAAID,SAAUA,MAEhD,yBAAKI,MAAM,OACT,yBAAKA,MAAM,UAAS,kBAAC,EAAD,CAASH,GAAG,IAAID,SAAUA,KAC9C,yBAAKI,MAAM,UAAS,kBAAC,EAAD,CAASH,GAAG,IAAID,SAAUA,KAC9C,yBAAKI,MAAM,UAAS,kBAAC,EAAD,CAASH,GAAG,IAAID,SAAUA,MAIhD,iDACA,yBAAKI,MAAM,OACT,yBAAKA,MAAM,UAAS,kBAAC,EAAD,CAASH,GAAG,IAAID,SAAUgB,KAC9C,yBAAKZ,MAAM,UAAS,kBAAC,EAAD,CAASH,GAAG,IAAID,SAAUgB,KAC9C,yBAAKZ,MAAM,UAAS,kBAAC,EAAD,CAASH,GAAG,IAAID,SAAUgB,MAGlD,mDACA,yBAAKZ,MAAM,OACT,4BACE,mDACA,0CACA,0DACA,+DAKF,yBAAKA,MAAM,OACT,yBAAKA,MAAM,UACT,uBACAW,UAAU,WACVG,KAAK,sCACLC,OAAO,SACPC,IAAI,uBAJJ,UASF,yBAAKhB,MAAM,UACT,uBACAW,UAAU,WACVG,KAAK,uCACLC,OAAO,SACPC,IAAI,uBAJJ,aASF,yBAAKhB,MAAM,UACT,uBACAW,UAAU,WACVG,KAAK,4BACLC,OAAO,SACPC,IAAI,uBAJJ,aAaN,4BAAQL,UAAU,cAChB,mDC5FYM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.ffb033ca.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Toggle extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {isToggleOn: true};\r\n  \r\n      // This binding is necessary to make `this` work in the callback\r\n      this.handleClick = this.handleClick.bind(this);\r\n    }\r\n  \r\n    handleClick() {\r\n      this.setState(prevState => ({\r\n        isToggleOn: !prevState.isToggleOn\r\n      }));\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <button onClick={this.handleClick}>\r\n          {this.state.isToggleOn ? 'ON' : 'OFF'}\r\n        </button>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Toggle;","import React from 'react';\r\n\r\nfunction HomepageImage() {\r\n  const url = 'https://farm2.staticflickr.com/1827/43433131281_e411a3e987_k.jpg';\r\n  return (\r\n    <img src={url} style={{\"width\": \"100%\"}} alt='Image of Miasya' />\r\n  );\r\n}\r\n\r\nexport default HomepageImage;","import React from 'react';\r\nimport HomepageImage from './HomepageImage.js'\r\n\r\nclass ItemBox extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.description = \r\n            <div> \r\n                <h3>{props.projects[props.id].title}</h3>\r\n                <p>{props.projects[props.id].content}</p>\r\n            </div>;\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div class=\"boxed\">\r\n          <HomepageImage />\r\n          {this.description}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default ItemBox;","import React from 'react';\r\n\r\nclass ChangingCaption extends React.Component {\r\n\r\n    captions = [\"Tacos\", \"Dumplings\", \"Noodles\", \"Corbin!\"]\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {date: new Date()};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n          () => this.tick(),\r\n          1000\r\n        );\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n    \r\n    tick() {\r\n        this.setState({\r\n          date: new Date()\r\n        });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <p style={{\"color\": \"#AEF359\"}} >Likes {this.captions[this.state.date.getUTCSeconds() % 4]}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default ChangingCaption;","import React from 'react';\r\nimport ChangingCaption from './ChangingCaption.js'\r\n\r\nclass Intro extends React.Component {\r\n    render() {\r\n      return (\r\n        <div class=\"row\">\r\n          <div class=\"column\"><img src=\"http://images.clipartpanda.com/watermelon-clip-art-Gerald_G_Simple_Fruit_(FF_Menu)_16.png\" className=\"App-logo\" alt=\"logo\" /></div>\r\n          <div class=\"column\">\r\n            <h1>Miasya</h1>\r\n            <ChangingCaption />\r\n            <p>Hon. Software Engineering at McGill University <br></br>\r\n              Google STEP Intern<br></br>\r\n              Engineering Schulich Leader Scholar<br></br>\r\n              Chemistry Institute of Canada Scholar\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Intro;","import React from 'react';\nimport './App.css';\nimport Toggle from './components/Toggle.js'\nimport NumberList from './components/NumberList.js'\nimport ItemBox from './components/ItemBox.js'\nimport Intro from './components/Intro.js'\nimport HomepageImage from './components/HomepageImage.js'\n\nconst projects = {\n  '1': {title: 'Brain-Controlled Wheelchair', content: 'wooo yeet a github link'},\n  '2': {title: 'EMG Finger Classification Armband', content: 'wooowoooo'},\n  '3': {title: 'ML Bootcamp: Sentiment Analysis Capstone', content: 'woohooohooooooooo'},\n  '4': {title: 'Hear2See', content: 'woooooo'},\n  '5': {title: 'Maze-Solving Robot', content: 'woooooo'},\n  '6': {title: 'React Site!', content: 'this thing lol'},\n};\n\nconst hobbies = {\n  '1': {title: 'Quilt', content: 'yesss'},\n  '2': {title: 'Paint', content: 'yasss'},\n  '3': {title: 'Another Quilt', content: 'yeet yeet'},\n};\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>useless button => <Toggle /></p>\n      </header>\n      <body className=\"App-body\">\n        \n        <Intro />\n\n        <h3>Technical Projects</h3>\n        <div class=\"row\">\n          <div class=\"column\"><ItemBox id='1' projects={projects}/></div>\n          <div class=\"column\"><ItemBox id='2' projects={projects}/></div>\n          <div class=\"column\"><ItemBox id='3' projects={projects}/></div>\n        </div>\n        <div class=\"row\">\n          <div class=\"column\"><ItemBox id='4' projects={projects}/></div>\n          <div class=\"column\"><ItemBox id='5' projects={projects}/></div>\n          <div class=\"column\"><ItemBox id='6' projects={projects}/></div>\n        </div>\n\n\n        <h3>Creative Projects</h3>\n        <div class=\"row\">\n          <div class=\"column\"><ItemBox id='1' projects={hobbies}/></div>\n          <div class=\"column\"><ItemBox id='2' projects={hobbies}/></div>\n          <div class=\"column\"><ItemBox id='3' projects={hobbies}/></div>\n        </div>\n\n      <h3>Research Experience</h3>\n      <div class=\"row\">\n        <ul>\n          <li>more coming soooon!</li>\n          <li>wheelchair</li>\n          <li>brief time with mcgill med</li>\n          <li>genetics thing in high school</li>\n        </ul>\n      </div>\n\n\n        <div class=\"row\">\n          <div class=\"column\">\n            <a\n            className=\"App-link\"\n            href=\"mailto:miasya.bulger@mail.mcgill.ca\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            >\n            Email\n            </a>\n          </div>\n          <div class=\"column\">\n            <a\n            className=\"App-link\"\n            href=\"https://linkedin.com/in/miasyabulger\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            >\n            LinkedIn\n            </a>\n          </div>\n          <div class=\"column\">\n            <a\n            className=\"App-link\"\n            href=\"https://github.com/miasya\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            >\n            Github\n            </a>\n          </div>\n        </div>\n\n        \n      </body>\n      <footer className=\"App-footer\">\n        <p>Have a great day!</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}